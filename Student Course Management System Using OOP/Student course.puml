@startuml
skinparam monochrome true

class User {
  -full_name: str
  -email: str
  -password: str
  -role: str
  +_is_valid_email(email: str): bool
}

class Student {
  -enrolled_courses: list
  +enroll_in_course(course_id: str, storage: Storage)
  +view_enrolled_courses(storage: Storage)
  +view_grades(storage: Storage)
}

class Facilitator {
  -created_courses: list
  +create_course(course_id: str, name: str, storage: Storage)
  +assign_grade(course_id: str, student_email: str, grade: str, storage: Storage)
  +view_enrolled_students(course_id: str, storage: Storage)
}

class Course {
  -course_id: str
  -name: str
  -facilitator_email: str
  -enrollments: list
}

class Enrollment {
  -course_id: str
  -student_email: str
  -grade: str
  +_is_valid_email(email: str): bool
  +_is_valid_grade(grade: str): bool
}

class Storage {
  -users_file: str
  -courses_file: str
  -enrollments_file: str
  +save_user(user: User)
  +find_user_by_email(email: str): User
  +login_user(email: str, password: str): User
  +save_course(course: Course)
  +find_course_by_id(course_id: str): Course
  +get_all_courses(): list
  +save_enrollment(enrollment: Enrollment)
  +find_enrollments_by_student(student_email: str): list
  +find_enrollments_by_course(course_id: str): list
  +find_enrollment_by_course_and_student(course_id: str, student_email: str): Enrollment
  +find_all_enrollments(): list
}

class ConsoleApp {
  -storage: Storage
  -current_user: User
  +start()
  +register(role: str)
  +login(role: str)
  +student_menu()
  +facilitator_menu()
  +enroll_course()
  +view_enrolled_courses()
  +view_grades()
  +create_course()
  +assign_grade()
  +view_enrolled_students()
  -_validate_full_name(full_name: str): str
  -_validate_email(email: str): str
  -_validate_password(password: str): str
  -_validate_course_id(course_id: str): str
  -_validate_grade(grade: str): str
  -_validate_course_name(name: str): str
}

class PasswordEncryption {
  -password: str
  +encrypt(): str
  +decrypt(): str
}

class InvalidPasswordError {
}

class InvalidEmailError {
}

class EmptyFieldError {
}

class ResourceAlreadyExistsError {
}

class InvalidFormatError {
}

class ResourceNotFoundError {
}

class FileOperationError {
}

User <|-- Student
User <|-- Facilitator
Student --> Storage : uses
Facilitator --> Storage : uses
ConsoleApp --> Storage : uses
ConsoleApp --> Student : interacts
ConsoleApp --> Facilitator : interacts
Storage --> User : manages
Storage --> Course : manages
Storage --> Enrollment : manages
User --> PasswordEncryption : uses
User --> InvalidEmailError : raises
User --> EmptyFieldError : raises
PasswordEncryption --> InvalidPasswordError : raises
Course --> InvalidFormatError : raises
Course --> EmptyFieldError : raises
Enrollment --> InvalidFormatError : raises
Enrollment --> InvalidEmailError : raises
Storage --> ResourceAlreadyExistsError : raises
Storage --> InvalidEmailError : raises
Storage --> InvalidFormatError : raises
ConsoleApp --> InvalidFormatError : raises
ConsoleApp --> EmptyFieldError : raises
ConsoleApp --> ResourceNotFoundError : raises
ConsoleApp --> ResourceAlreadyExistsError : raises
ConsoleApp --> InvalidEmailError : raises
Facilitator --> Course : creates
Student --> Enrollment : enrolls
Facilitator --> Enrollment : assigns grade
Course --> Enrollment : contains

@enduml