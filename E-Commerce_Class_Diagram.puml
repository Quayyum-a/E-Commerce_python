@startuml
package "Domain" {
  class User {
    -id: int
    -username: string
    -email: string
    -password_hash: string
    -role: string
    +register()
    +login()
  }

  class Product {
    -id: int
    -name: string
    -price: float
    -stock: int
    +create()
    +update()
  }

  class Order {
    -id: int
    -user_id: int
    -product_id: int
    -quantity: int
    -status: string
    +place_order()
  }

  class Cart {
    -id: int
    -user_id: int
    +get_items()
    +add_item()
    +remove_item()
    +clear_cart()
  }

  class CartItem {
    -id: int
    -cart_id: int
    -product_id: int
    -quantity: int
  }
}

User "1" -- "1" Cart : owns >
Cart "1" -- "*" CartItem : contains >
CartItem "*" -- "1" Product : references >
User "1" -- "*" Order : places >
Order "*" -- "1" Product : contains >

package "Application" {
  class AuthService {
    +register_user()
    +login_user()
  }

  class ProductService {
    +create_product()
    +get_products()
    +update_product()
  }

  class OrderService {
    +place_order()
    +get_user_orders()
  }

  class CartService {
    +add_to_cart()
    +remove_from_cart()
    +get_cart()
    +checkout()
  }
}

package "Infrastructure" {
  class UserRepository {
    +save_user()
    +find_user_by_email()
  }

  class ProductRepository {
    +save_product()
    +find_product_by_id()
    +find_all_products()
  }

  class OrderRepository {
    +save_order()
    +find_orders_by_user()
  }

  class CartRepository {
    +save_cart()
    +find_cart_by_user()
  }
}

AuthService ..> UserRepository
ProductService ..> ProductRepository
OrderService ..> OrderRepository
CartService ..> CartRepository
@enduml